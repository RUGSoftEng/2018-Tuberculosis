GOCMD=go
GOBUILD=$(GOCMD) build
GORUN=$(GOCMD) run
EXEC_NAME=API

all: format check build
run: build
	./$(EXEC_NAME)

build: deps_code
	$(GOBUILD) -o $(EXEC_NAME)

###################################
# Go Tools for automated formatting
format:	fmt

# -w: writes changes to the file
# -l: list changed files
fmt:
	gofmt -l -w *.go

#############################
# Go Tools for error checking
check: deps_check lint vet safesql errcheck

# -set_exit_status: returns 1 if any improvements could be found
lint:
	golint -set_exit_status *.go

vet:
	go vet *.go

# Looks for SQL Injection weaknesses
# -q: No output if nothing fails
safesql:
	safesql -q .

# Looks for unchecked errors
errcheck:
	errcheck .

#####################################################
# Dependencies for running the makefile
# This does not get the dependencies for the api code
deps_check:
	go get -u golang.org/x/lint/golint
	go get -u github.com/stripe/safesql
	go get -u github.com/kisielk/errcheck

##############################
# Dependencies for the api code
deps_code:
	go get -u github.com/pkg/errors
	go get -u github.com/gorilla/mux
	go get -u golang.org/x/crypto/bcrypt
	go get -u github.com/go-sql-driver/mysql
	go get -u github.com/dgrijalva/jwt-go
	go get -u github.com/mitchellh/mapstructure

###################################################
# Cleans up all the files generated by the makefile
clean:
	rm -f $(EXEC_NAME)
